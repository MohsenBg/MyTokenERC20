import detectEthereumProvider from "@metamask/detect-provider";
import Head from "next/head";
import React, { useEffect } from "react";
import { useSelector } from "react-redux";
import {
  ABI_LOOP_TOKEN_CONTRACT,
  ABI_SELL_CONTRACT,
  ADDRESS_LOOP_TOKEN,
  ADDRESS_SELL_TOKEN,
} from "../../config_Contracts";
import Web3 from "web3";
import { initialState } from "../../Redux/store";

const BuyToken = () => {
  const AccountAddress = useSelector(
    (state: typeof initialState) => state.AccountData.addressAccounts
  );
  useEffect(() => {
    const BalanceContract = async () => {
      const provider: any = await detectEthereumProvider();
      const web3 = new Web3(provider);
      if (provider) {
        if (AccountAddress.length >= 1) {
          const Contract = await new web3.eth.Contract(
            //@ts-ignore
            ABI_LOOP_TOKEN_CONTRACT,
            ADDRESS_LOOP_TOKEN
          );
          console.log(
            Contract.methods
              .balanceOf("0x8ce741188463d5c27f44dcd636fb62f960a5eea0")
              .call()
          );
        }
      }
    };
    BalanceContract();
  }, []);
  return (
    <div>
      <Head>
        <title>Buy Token</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div>h</div>
    </div>
  );
};

export default BuyToken;
